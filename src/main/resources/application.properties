# Backend Configuration file

quarkus.http.port=${HTTP_PORT:9000}
#use profil dev
#%dev.quarkus.http.port=8181

# SSL
quarkus.http.ssl-port=${HTTPS_PORT:9443}
# The file path to a server certificate or certificate chain in PEM format.
quarkus.http.ssl.certificate.file=${SSL_CERTIFICAT_FILE:META-INF/certs/server.pem}
# The file path to the corresponding certificate private key file in PEM format.
quarkus.http.ssl.certificate.key-file=${SSL_CERTIFICAT_KEY_FILE:META-INF/certs/server.key}
# The list of protocols to explicitly enable
quarkus.http.ssl.protocols=${SSL_PROTOCOLS:TLSv1.3,TLSv1.2}
# The cipher suites to use. If none is given, a reasonable default is selected.
quarkus.http.ssl.cipher-suites=ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK

%test.quarkus.http.ssl.certificate.file=src/test/resources/certs/server.pem
%test.quarkus.http.ssl.certificate.key-file=src/test/resources/certs/server.key

# JWT actually smalrye-jwt doesn't support public JWT
#Smallrye-jwt configuration, it doesn't work currently
#mp.jwt.verify.publickey.location=${JWT_PUBLIC_KEY:META-INF/resources/certs/publicKey.pem}
#mp.jwt.verify.issuer=${JWT_VERIFY_ISSUER:https://quarkus.io/using-jwt-rbac}
#mp.jwt.verify.issuer=https://accounts.google.com
#mp.jwt.verify.publickey.location=https://www.googleapis.com/oauth2/v3/certs
#quarkus.smallrye-jwt.auth-mechanism=MP-JWT
#quarkus.smallrye-jwt.enabled=true

# OIDC
oidc.verify.jwk.issuer=${OIDC_ISSUER:https://accounts.google.com}
oidc.verify.jwk.set=${OIDC_PROVIDER_METADATA_URL:https://www.googleapis.com/oauth2/v3/certs}

%dev.oidc.verify.jwk.issuer=${OIDC_ISSUER:https://accounts.google.com}
%dev.oidc.verify.jwk.set=${OIDC_PROVIDER_METADATA_URL:https://www.googleapis.com/oauth2/v3/certs}

# Rest security
resteasy.role.based.security=true

# Rest client
FakeApiService/mp-rest/url=https://jsonplaceholder.typicode.com

# fr.Test
greeting.message=${HELLO_WORLD:hello: world!}
greeting.name=quarkus

# Database
# H2 (only for dev)
%dev.quarkus.datasource.url=jdbc:h2:~/test;CACHE_SIZE=131072
%dev.quarkus.datasource.driver=org.h2.Driver
%dev.quarkus.datasource.username=rebot
%dev.quarkus.datasource.password=rebot
%dev.quarkus.datasource.max-size=8
%dev.quarkus.datasource.min-size=2

# H2 (only for test)
%test.quarkus.datasource.url=jdbc:h2:~/test;CACHE_SIZE=131072
%test.quarkus.datasource.driver=org.h2.Driver
%test.quarkus.datasource.username=rebot
%test.quarkus.datasource.password=rebot
%test.quarkus.datasource.max-size=8
%test.quarkus.datasource.min-size=2

# MariaDB
quarkus.datasource.url:${DATASOURCE_URL:jdbc:mariadb://mariadb:3306/test}
quarkus.datasource.driver:${DATASOURCE_DRIVER:org.mariadb.jdbc.Driver}
quarkus.datasource.username:${DATASOURCE_USER:quarkus}
quarkus.datasource.password:${DATASOURCE_PWD:quarkus}

# Hibernate
# drop and create the database at startup (use `update` to only update the schema)
quarkus.hibernate-orm.database.generation=${HIBERNATE_DB_GENERATION:drop-and-create}
quarkus.hibernate-orm.log.sql=${HIBERNATE_LOG_SQL:true}

# Swagger UI
quarkus.swagger-ui.path=/swagger-ui

# DEBUG console logging
quarkus.log.console.enable=${CONSOLE_LOG_ENABLED:true}
quarkus.log.console.format=${CONSOLE_LOG_FORMAT:%d{HH:mm:ss} %-5p [%c{2.}]] (%t) %s%e%n}
quarkus.log.console.level=${CONSOLE_LOG_LEVEL:DEBUG}

# TRACE file logging
quarkus.log.file.enable=${FILE_LOG_ENABLED:true}
quarkus.log.file.path=${FILE_LOG_PATH:/tmp/trace.log}
quarkus.log.file.level=${FILE_LOG_LEVEL:TRACE}
quarkus.log.file.format=${FILE_LOG_FORMAT:%d{HH:mm:ss} %-5p [%c{2.}]] (%t) %s%e%n}
quarkus.log.category."io.quarkus.smallrye.jwt".level=${FILE_LOG_LEVEL:TRACE}
quarkus.log.category."io.undertow.request.security".level=${FILE_LOG_LEVEL:TRACE}
quarkus.log.category."io.smallrye.jwt".level=${FILE_LOG_LEVEL:TRACE}
quarkus.log.category."org.eclipse.microprofile.rest.client".level=TRACE
quarkus.log.category."javax.net".level=ERROR
quarkus.log.category."com.nimbusds.jose".level=TRACE